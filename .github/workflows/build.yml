name: Fine Auto Release
on:
  push:
    tags:
      - '*'  # 当有标签推送时触发

jobs:
#  build-windows:
#    runs-on: windows-latest
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v4
#
#      - name: Set up Go
#        uses: actions/setup-go@v4
#        with:
#          go-version: '1.22.0'
#
#      - name: Install Wails
#        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest
#
#      - name: Set up Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: '18'
#
#      - name: Install dependencies
#        run: |
#          cd frontend
#          npm install --force
#
#      - name: Build
#        run: |
#          wails build
#
#      - name: Upload Artifacts
#        uses: actions/upload-artifact@v2
#        with:
#          name: windows-artifact
#          path: |
#            build/bin/*
#

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

#      - name: Set up Go
#        uses: actions/setup-go@v4
#        with:
#          go-version: '1.22.0'
#
#      - name: Install Wails
#        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

#      - name: Set up Node.js
#        uses: actions/setup-node@v4
#        with:
#          node-version: '18'
#
#      - name: Install dependencies
#        run: |
#          cd frontend
#          npm install --force
#
#      - name: Build
#        run: |
#          wails build

      - name: Zip Build Artifacts
        run: |
          cd build/bin/
          zip -r Fine-darwin.zip *
          mv Fine-darwin.zip $GITHUB_WORKSPACE

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: macos-artifact
          path: |
            $GITHUB_WORKSPACE/Fine-darwin.zip
  release:
    runs-on: macos-latest
    needs: [build-macos]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Read Package Version
        id: version
        run: |
          cd frontend
          echo "::set-output name=version::$(jq -r '.version' package.json)"
          echo ${{ steps.version.outputs.version }}

#      - name: Download Windows Build Artifacts
#        uses: actions/download-artifact@v3
#        with:
#          name: windows-artifact
#          path: windows-artifact/

      - name: Download Macos Build Artifacts
        uses: actions/download-artifact@v2
        with:
          name: macos-artifact
          path: artifacts/

      - name: Create Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            artifacts/*
#            windows-artifact/*
        env:
          GITHUB_TOKEN: ${{ secrets.FINE_TEST_ACCESS_TOKEN }}

