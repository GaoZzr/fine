name: Fine release

on:
  push:
    tags:
      - '*'

env:
  # Necessary for most environments as build failure can occur due to OOM issues
#  NODE_OPTIONS: "--max-old-space-size=4096"
  go-version: '1.22.0'
  node-version: '18'
  wails-version: 'latest'

jobs:
  build:
    strategy:
      # true: 一个失败全终止
      fail-fast: true
      matrix:
        build:
          - os: "windows"
            arch: 'amd64'
            runs-on: 'windows-latest'
#          - os: "darwin"
#            arch: 'amd64'
#            runs-on: 'macos-13'
#          - os: "darwin"
#            arch: 'arm64'
#            runs-on: 'macos-latest'

    runs-on: ${{ matrix.build.runs-on }}
    env:
      CGO_ENABLED: 1
      GOOS: ${{ matrix.build.os }}
      GOARCH: ${{ matrix.build.arch }}
    steps:
      - name: Define artifact name
        run: |
          echo "artifact_name=${{ format('Fine_{0}_{1}{2}', matrix.build.os, matrix.build.arch, matrix.build.os == 'windows' && '.exe' || '.app') }}" >> $GITHUB_ENV
          echo "Artifact name is: $env:artifact_name"

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node-version }}

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.go-version }}

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@${{ env.wails-version }}

      - name: Install UPX
        if: matrix.build.os == 'windows'
        uses: crazy-max/ghaction-upx@v3
        with:
          install-only: true

      - name: Build WxMiniProgramDecompile for Windows
        if: matrix.build.os == 'windows'
        run: |
          cd wechatMiniProgram
          npm install pkg
          npm install --force
          npm run build
          mv decompile.exe ../backend/service/service/wechat/decompile

      - name: Build WxMiniProgramDecompile for Mac/Linux
        if: matrix.build.os != 'windows'
        run: |
          cd wechatMiniProgram
          npm install pkg
          npm install --force
          npm run build
          mv decompile ../backend/service/service/wechat/decompile

      - name: Build artifact
        run: |
          echo "Artifact name is: ${{ env.artifact_name }}"
          wails build --platform ${{ matrix.build.os }}/${{ matrix.build.arch }} -o ${{ env.artifact_name }}

      - name: Compress artifact
        if: matrix.build.os != 'darwin'
        run: |
          upx build/bin/* -9

      - name: Zip mac artifact
        if: matrix.build.os == 'darwin'
        run: |
          ditto -c -k build/bin/Fine.app build/bin/${{ env.artifact_name }}.zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact_name }}${{ matrix.build.os == 'darwin' && '.zip' || '' }}
          path: build/bin/${{ env.artifact_name }}${{ matrix.build.os == 'darwin' && '.zip' || '' }}

  release:
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.artifact_name }}${{ matrix.build.os == 'darwin' && '.zip' || '' }}
          path: ${{ github.workspace }}/artifacts

      - name: List artifacts
        run: |
          ls ${{ github.workspace }}/artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ github.workspace }}/artifacts/**
#          token: ${{ secrets.FINE_ACCESS_TOKEN }}
          token: ${{ secrets.FINE_TEST_ACCESS_TOKEN }}
          body: |   
            1. 添加darwin/amd64支持。
